/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfaceGraphique;

import Model.Caillou;
import Model.ClasseSQL;
import Model.Direction;
import Model.Jeton;
import Model.Monstre;
import Model.Partie;
import Model.Pion;
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.MouseEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Corentin
 */
public class Fenster extends javax.swing.JFrame implements Vue {

    ClasseSQL bdd = new ClasseSQL();
    public static final String VERSION = "0.2";

    /**
     * Creates new form Fenste
     */
    public Fenster() {
        initComponents();
        this.getContentPane().setBackground(BG_COLOR);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialogConnexion = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        champPseudoCo = new javax.swing.JTextField();
        validerConnexion = new javax.swing.JButton();
        champMdpCo = new javax.swing.JPasswordField();
        jDialogInscription = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        champPseudoCrea = new javax.swing.JTextField();
        champMdpCrea = new javax.swing.JTextField();
        validerInscri = new javax.swing.JButton();
        entrerNom = new javax.swing.JButton();
        entrerPrenom = new javax.swing.JButton();
        jDialogConnexionInscription = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        boutonInscrip = new javax.swing.JButton();
        boutonConnex = new javax.swing.JButton();
        jDialog4 = new javax.swing.JDialog();
        champNom = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        validerNom = new javax.swing.JButton();
        jDialog5 = new javax.swing.JDialog();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        champPrenom = new javax.swing.JTextField();
        validerPrenom = new javax.swing.JButton();
        jDialog6 = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        boutonNbPartie = new javax.swing.JSpinner();
        sortis = new JGroupePions(false);
        salleAttenteGreen = new JGroupePions(true);
        salleAttenteRed = new JGroupePions(true);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        nomJoueurRouge = new javax.swing.JLabel();
        nomJoueurVert = new javax.swing.JLabel();
        boutonEntrerPlateau = new javax.swing.JButton();
        boutonFinTour = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuPartie = new javax.swing.JMenu();
        jMenuItemNewGame = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();

        jDialogConnexion.setResizable(false);
        jDialogConnexion.setSize(new java.awt.Dimension(225, 300));
        jDialogConnexion.setLocationRelativeTo(null);

        jLabel3.setText("Connexion");

        jLabel5.setText("Pseudo");

        jLabel7.setText("Mot de passe");

        champPseudoCo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champPseudoCoActionPerformed(evt);
            }
        });

        validerConnexion.setText("Valider");
        validerConnexion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validerConnexionMouseClicked(evt);
            }
        });
        validerConnexion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerConnexionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDialogConnexionLayout = new javax.swing.GroupLayout(jDialogConnexion.getContentPane());
        jDialogConnexion.getContentPane().setLayout(jDialogConnexionLayout);
        jDialogConnexionLayout.setHorizontalGroup(
            jDialogConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogConnexionLayout.createSequentialGroup()
                .addGroup(jDialogConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogConnexionLayout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jLabel3))
                    .addGroup(jDialogConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jDialogConnexionLayout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(18, 18, 18)
                            .addComponent(champMdpCo))
                        .addGroup(jDialogConnexionLayout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addGap(18, 18, 18)
                            .addComponent(champPseudoCo, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jDialogConnexionLayout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(validerConnexion)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jDialogConnexionLayout.setVerticalGroup(
            jDialogConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogConnexionLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel3)
                .addGap(31, 31, 31)
                .addGroup(jDialogConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(champPseudoCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jDialogConnexionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(champMdpCo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(validerConnexion)
                .addGap(46, 46, 46))
        );

        jDialogInscription.setResizable(false);
        jDialogInscription.setSize(new java.awt.Dimension(213, 300));
        jDialogInscription.setLocationRelativeTo(null);

        jLabel6.setText("Inscription");

        jLabel8.setText("Pseudo");

        jLabel9.setText("Mot de passe");

        champPseudoCrea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champPseudoCreaActionPerformed(evt);
            }
        });

        validerInscri.setText("Valider");
        validerInscri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validerInscriMouseClicked(evt);
            }
        });

        entrerNom.setText("Entrer un nom");
        entrerNom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entrerNomMouseClicked(evt);
            }
        });

        entrerPrenom.setText("Entrer un pr√©nom");
        entrerPrenom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                entrerPrenomMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialogInscriptionLayout = new javax.swing.GroupLayout(jDialogInscription.getContentPane());
        jDialogInscription.getContentPane().setLayout(jDialogInscriptionLayout);
        jDialogInscriptionLayout.setHorizontalGroup(
            jDialogInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                .addGroup(jDialogInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialogInscriptionLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(champPseudoCrea, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(champMdpCrea, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                        .addGroup(jDialogInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jLabel6))
                            .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(validerInscri))
                            .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(entrerNom))
                            .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(entrerPrenom)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialogInscriptionLayout.setVerticalGroup(
            jDialogInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogInscriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(34, 34, 34)
                .addGroup(jDialogInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(champPseudoCrea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(jDialogInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(champMdpCrea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(44, 44, 44)
                .addComponent(validerInscri)
                .addGap(18, 18, 18)
                .addComponent(entrerNom)
                .addGap(18, 18, 18)
                .addComponent(entrerPrenom)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jDialogConnexionInscription.setResizable(false);
        jDialogConnexionInscription.setSize(new java.awt.Dimension(300, 200));
        jDialogConnexionInscription.setLocationRelativeTo(null);

        jLabel4.setText("D√©j√† inscrit ? Identifiez-vous !");

        jLabel10.setText("Nouveau sur le jeu ? Faites un compte !");

        boutonInscrip.setText("Inscription");
        boutonInscrip.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boutonInscripMouseClicked(evt);
            }
        });

        boutonConnex.setText("Connexion");
        boutonConnex.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boutonConnexMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialogConnexionInscriptionLayout = new javax.swing.GroupLayout(jDialogConnexionInscription.getContentPane());
        jDialogConnexionInscription.getContentPane().setLayout(jDialogConnexionInscriptionLayout);
        jDialogConnexionInscriptionLayout.setHorizontalGroup(
            jDialogConnexionInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogConnexionInscriptionLayout.createSequentialGroup()
                .addGroup(jDialogConnexionInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialogConnexionInscriptionLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jDialogConnexionInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(jDialogConnexionInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(boutonConnex)
                                .addComponent(jLabel4))))
                    .addGroup(jDialogConnexionInscriptionLayout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(boutonInscrip)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jDialogConnexionInscriptionLayout.setVerticalGroup(
            jDialogConnexionInscriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialogConnexionInscriptionLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(boutonConnex)
                .addGap(17, 17, 17)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(boutonInscrip)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jDialog4.setPreferredSize(new java.awt.Dimension(200, 150));

        jLabel11.setText("Nom");

        jLabel12.setText("Saisie du nom");

        validerNom.setText("Valider");
        validerNom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validerNomMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog4Layout = new javax.swing.GroupLayout(jDialog4.getContentPane());
        jDialog4.getContentPane().setLayout(jDialog4Layout);
        jDialog4Layout.setHorizontalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDialog4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(champNom))
                    .addGroup(jDialog4Layout.createSequentialGroup()
                        .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialog4Layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(jLabel12))
                            .addGroup(jDialog4Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(validerNom)))
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialog4Layout.setVerticalGroup(
            jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(26, 26, 26)
                .addGroup(jDialog4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(champNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(validerNom)
                .addGap(22, 22, 22))
        );

        jDialog5.setPreferredSize(new java.awt.Dimension(200, 150));

        jLabel13.setText("Saisie du pr√©nom");

        jLabel14.setText("Pr√©nom");

        validerPrenom.setText("Valider");
        validerPrenom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validerPrenomMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jDialog5Layout = new javax.swing.GroupLayout(jDialog5.getContentPane());
        jDialog5.getContentPane().setLayout(jDialog5Layout);
        jDialog5Layout.setHorizontalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog5Layout.createSequentialGroup()
                .addGroup(jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(champPrenom))
                    .addGroup(jDialog5Layout.createSequentialGroup()
                        .addGroup(jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDialog5Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel13))
                            .addGroup(jDialog5Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(validerPrenom)))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jDialog5Layout.setVerticalGroup(
            jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addGap(24, 24, 24)
                .addGroup(jDialog5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(champPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(validerPrenom)
                .addGap(24, 24, 24))
        );

        jLabel15.setText("Historique des parties");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        boutonNbPartie.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                boutonNbPartieStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jDialog6Layout = new javax.swing.GroupLayout(jDialog6.getContentPane());
        jDialog6.getContentPane().setLayout(jDialog6Layout);
        jDialog6Layout.setHorizontalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog6Layout.createSequentialGroup()
                .addGroup(jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDialog6Layout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(jLabel15))
                    .addGroup(jDialog6Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDialog6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boutonNbPartie, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        jDialog6Layout.setVerticalGroup(
            jDialog6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(12, 12, 12)
                .addComponent(boutonNbPartie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Finstere Flure v" +this.VERSION);
        setFocusCycleRoot(false);
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        sortis.setBackground(null);
        sortis.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        sortis.setPreferredSize(new java.awt.Dimension(40, 374));

        javax.swing.GroupLayout sortisLayout = new javax.swing.GroupLayout(sortis);
        sortis.setLayout(sortisLayout);
        sortisLayout.setHorizontalGroup(
            sortisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );
        sortisLayout.setVerticalGroup(
            sortisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 429, Short.MAX_VALUE)
        );

        salleAttenteGreen.setBackground(null);
        salleAttenteGreen.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        salleAttenteGreen.setPreferredSize(new java.awt.Dimension(301, 40));

        javax.swing.GroupLayout salleAttenteGreenLayout = new javax.swing.GroupLayout(salleAttenteGreen);
        salleAttenteGreen.setLayout(salleAttenteGreenLayout);
        salleAttenteGreenLayout.setHorizontalGroup(
            salleAttenteGreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );
        salleAttenteGreenLayout.setVerticalGroup(
            salleAttenteGreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        salleAttenteRed.setBackground(null);
        salleAttenteRed.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        salleAttenteRed.setPreferredSize(new java.awt.Dimension(301, 40));

        javax.swing.GroupLayout salleAttenteRedLayout = new javax.swing.GroupLayout(salleAttenteRed);
        salleAttenteRed.setLayout(salleAttenteRedLayout);
        salleAttenteRedLayout.setHorizontalGroup(
            salleAttenteRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );
        salleAttenteRedLayout.setVerticalGroup(
            salleAttenteRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jLabel1.setText("Rouge :");

        jLabel2.setText("Vert :");

        boutonEntrerPlateau.setText("Entrer sur le plateau");
        boutonEntrerPlateau.setEnabled(false);

        boutonFinTour.setText("Terminer le tour");
        boutonFinTour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonFinTourActionPerformed(evt);
            }
        });

        jMenuPartie.setText("Partie");
        jMenuPartie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuPartieActionPerformed(evt);
            }
        });

        jMenuItemNewGame.setText("Nouvelle partie...");
        jMenuItemNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNewGameActionPerformed(evt);
            }
        });
        jMenuPartie.add(jMenuItemNewGame);
        jMenuPartie.add(jSeparator1);

        jMenuItem2.setText("Historique");
        jMenuPartie.add(jMenuItem2);

        jMenuItem3.setText("Options");
        jMenuPartie.add(jMenuItem3);
        jMenuPartie.add(jSeparator2);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem4.setText("Quitter");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenuPartie.add(jMenuItem4);

        jMenuBar1.add(jMenuPartie);

        jMenuHelp.setText("?");

        jMenuItem5.setText("Aide");
        jMenuHelp.add(jMenuItem5);

        jMenuItem6.setText("A propos...");
        jMenuHelp.add(jMenuItem6);

        jMenuBar1.add(jMenuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(sortis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(salleAttenteRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nomJoueurRouge, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nomJoueurVert, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(salleAttenteGreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                                .addComponent(boutonEntrerPlateau))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boutonFinTour)
                        .addGap(441, 441, 441)))
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(sortis, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salleAttenteRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salleAttenteGreen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(boutonEntrerPlateau)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(nomJoueurRouge, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(nomJoueurVert, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78)
                .addComponent(boutonFinTour)
                .addGap(72, 72, 72))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Detection de la pression d'une touche du clavier. Si c'est une des
     * fl√®ches et qu'un pion est s√©lectionn√©, on essaye de d√©placer ce pion dans
     * la direction de la fl√®che.
     *
     * @param evt
     */
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        Direction d = null;
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_DOWN:
                d = Direction.BAS;
                break;
            case KeyEvent.VK_UP:
                d = Direction.HAUT;
                break;
            case KeyEvent.VK_LEFT:
                d = Direction.GAUCHE;
                break;
            case KeyEvent.VK_RIGHT:
                d = Direction.DROITE;
                break;
        }

        if (selected != null && d != null) {

            /*
            METTRE ICI LES INSTRUCTIONS DE DEPLACEMENT
             */
            selected.setLocation(plateau.position(selected.getCoordonnees().plus(d.getVector())));
        }
    }//GEN-LAST:event_formKeyPressed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItemNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNewGameActionPerformed
        String[] typePartie = {"2 joueurs", "contre l'ordinateur"};
        int rang = JOptionPane.showOptionDialog(null, "Quel type de partie voulez-vous jouer ?", "Type partie", JOptionPane.OK_CANCEL_OPTION, -1, null, typePartie, typePartie[0]);
        if (rang == 0) {//Si partie 2 joueurs
            jDialogConnexionInscription.setVisible(true);
            jDialogConnexionInscription.setVisible(true);
            //initPartie();
        } else {//Si contre IA

            jDialogConnexionInscription.setVisible(true);
            //initPartie();
        }

    }//GEN-LAST:event_jMenuItemNewGameActionPerformed

    private void jMenuPartieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuPartieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuPartieActionPerformed

    private void boutonFinTourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonFinTourActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_boutonFinTourActionPerformed

    private void champPseudoCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champPseudoCoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_champPseudoCoActionPerformed

    private void validerConnexionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validerConnexionMouseClicked
        // TODO add your handling code here:
        bdd.connexionSQL();
        String pseudo = champPseudoCo.getText();
        String mdp = champMdpCo.getText();
        boolean valide = bdd.connexionIdent(pseudo, mdp);
        bdd.deconnexionSQL();
        if (valide) {
            jDialogConnexion.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "Mot de passe ou identifiant invalide", "Erreur", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_validerConnexionMouseClicked

    private void champPseudoCreaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champPseudoCreaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_champPseudoCreaActionPerformed

    private void boutonConnexMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boutonConnexMouseClicked
        jDialogConnexionInscription.setVisible(false);
        jDialogConnexion.setVisible(true);
    }//GEN-LAST:event_boutonConnexMouseClicked

    private void boutonInscripMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boutonInscripMouseClicked
        jDialogConnexionInscription.setVisible(false);
        jDialogInscription.setVisible(true);
    }//GEN-LAST:event_boutonInscripMouseClicked

    private void validerInscriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validerInscriMouseClicked
        bdd.connexionSQL();
        String pseudo = champPseudoCo.getText();
        String mdp = champMdpCo.getText();
        boolean valide = bdd.creationCompte(pseudo, mdp);
        bdd.deconnexionSQL();
        if (valide) {
            jDialogInscription.setVisible(false);
        }else{
            JOptionPane.showMessageDialog(null, "Saisie invalide", "Erreur", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_validerInscriMouseClicked

    private void validerPrenomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validerPrenomMouseClicked
        bdd.connexionSQL();
        String p = champPrenom.getText();
        bdd.entrerPrenom(p);
        bdd.deconnexionSQL();
        jDialog5.setVisible(false);
    }//GEN-LAST:event_validerPrenomMouseClicked

    private void validerNomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validerNomMouseClicked
        bdd.connexionSQL();
        String n = champNom.getText();
        bdd.entrerNom(n);
        bdd.deconnexionSQL();
        jDialog5.setVisible(false);
    }//GEN-LAST:event_validerNomMouseClicked

    private void entrerNomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entrerNomMouseClicked
        jDialogInscription.setVisible(false);
        jDialog4.setVisible(true);
    }//GEN-LAST:event_entrerNomMouseClicked

    private void entrerPrenomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_entrerPrenomMouseClicked
        jDialogInscription.setVisible(false);
        jDialog5.setVisible(true);
    }//GEN-LAST:event_entrerPrenomMouseClicked

    private void boutonNbPartieStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_boutonNbPartieStateChanged
        int nbPartie = ((Integer) boutonNbPartie.getValue());
        bdd.connexionSQL();
        String[] hist = new String[nbPartie];
        //finir la fonction qui voit si un compte est valide ou pas
        hist = bdd.historique(nbPartie);
        bdd.deconnexionSQL();
        //ici il faut mettre la valeur de hist dans le text area, je ne sais pas comment on fait, je verrai apr√®s ou si quelqu'un a une r√©v√©lation
        jDialog6.setVisible(false);
    }//GEN-LAST:event_boutonNbPartieStateChanged

    private void validerConnexionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerConnexionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_validerConnexionActionPerformed

    /**
     * Instructions √† √©x√©cuter quand on clique sur un pion : on le s√©lectionne
     *
     * @param evt
     */
    private void pionClicked(MouseEvent evt) {
        //v√©rifier que on a bien cliqu√© sur un de ses pions, et pas de l'adversaire
        JPion clicked = (JPion) evt.getSource();
        if (clicked.isEnabled() && clicked.getNumJoueur() == numJoueur && !dejaBouge) {

            this.selected.unselect();
            this.selected = clicked;
            this.selected.select();

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the STANDARD look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(Fenster.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Fenster.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Fenster.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Fenster.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Fenster.class.getName()).log(Level.SEVERE, null, ex);
        }
//</editor-fold>
//</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Fenster().setVisible(true);
            }
        });
    }

    public void initPartie() {

        //Cr√©er les 2 joueurs en fonction de la r√©posne
        this.partie = new Partie(this, j1, j2);

        this.nomJoueurRouge.setText(j1.getPseudo());
        this.nomJoueurVert.setText(j2.getPseudo());

        /*
        Cr√©ation du monstre
         */
        String[] spritesMonstre = {"monstre1.gif", "monstre2.gif", "monstre3.gif", "monstre4.gif"};
        monstre = new JPion(spritesMonstre);
        monstre.setOpaque(false);

        /*
          Cr√©ation des jetons joueurs avec ajout de leurs images
         */
        String[] adresses = {"pionred_1_6_clair.gif", "pionpurple_1_6_fonce.gif"};
        pionsPurple[0] = new JPion(adresses, 1);
        String[] adresses2 = {"pionred_3_4_clair.gif", "pionpurple_3_4_fonce.gif"};
        pionsPurple[1] = new JPion(adresses2, 1);
        String[] adresses3 = {"pionred_4_3_clair.gif", "pionpurple_4_3_fonce.gif"};
        pionsPurple[2] = new JPion(adresses3, 1);
        String[] adresses4 = {"pionred_5_2_clair.gif", "pionpurple_5_2_fonce.gif"};
        pionsPurple[3] = new JPion(adresses4, 1);

        String[] adresses5 = {"piongreen_1_6_clair.gif", "piongreen_1_6_fonce.gif"};
        pionsGreen[0] = new JPion(adresses5, 2);
        String[] adresses6 = {"piongreen_3_4_clair.gif", "piongreen_3_4_fonce.gif"};
        pionsGreen[1] = new JPion(adresses6, 2);
        String[] adresses7 = {"piongreen_4_3_clair.gif", "piongreen_4_3_fonce.gif"};
        pionsGreen[2] = new JPion(adresses7, 2);
        String[] adresses8 = {"piongreen_5_2_clair.gif", "piongreen_5_2_fonce.gif"};
        pionsGreen[3] = new JPion(adresses8, 2);

        /*
            A chaque jeton on ajoute un MouseListener afin de d√©tecter un clic dessus, et on rend le pion transparent
         */
        for (JPion p : pionsPurple) {
            p.setOpaque(false);
            p.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    pionClicked(evt);
                }
            });
        }

        for (JPion p : pionsGreen) {
            p.setOpaque(false);
            p.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    pionClicked(evt);
                }
            });
        }

        /*
            Cr√©ation et initialisation du plateau
         */
        plateau = new JPlateau();
        plateau.setBounds(100, 50, 694, 479);//permet de d√©finir la position et la taille en m√™me temps        
        this.add(plateau);

        updatePlateau();

        this.pack();
        this.repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonConnex;
    private javax.swing.JButton boutonEntrerPlateau;
    private javax.swing.JButton boutonFinTour;
    private javax.swing.JButton boutonInscrip;
    private javax.swing.JSpinner boutonNbPartie;
    private javax.swing.JPasswordField champMdpCo;
    private javax.swing.JTextField champMdpCrea;
    private javax.swing.JTextField champNom;
    private javax.swing.JTextField champPrenom;
    private javax.swing.JTextField champPseudoCo;
    private javax.swing.JTextField champPseudoCrea;
    private javax.swing.JButton entrerNom;
    private javax.swing.JButton entrerPrenom;
    private javax.swing.JDialog jDialog4;
    private javax.swing.JDialog jDialog5;
    private javax.swing.JDialog jDialog6;
    private javax.swing.JDialog jDialogConnexion;
    private javax.swing.JDialog jDialogConnexionInscription;
    private javax.swing.JDialog jDialogInscription;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItemNewGame;
    private javax.swing.JMenu jMenuPartie;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel nomJoueurRouge;
    private javax.swing.JLabel nomJoueurVert;
    private javax.swing.JPanel salleAttenteGreen;
    private javax.swing.JPanel salleAttenteRed;
    private javax.swing.JPanel sortis;
    private javax.swing.JButton validerConnexion;
    private javax.swing.JButton validerInscri;
    private javax.swing.JButton validerNom;
    private javax.swing.JButton validerPrenom;
    // End of variables declaration//GEN-END:variables
    JPion[] pionsPurple = new JPion[4];
    JPion[] pionsGreen = new JPion[4];
    JPion monstre;
    JPlateau plateau;
    JPion selected = new JPion(new String[1]);

    int numJoueur;

    boolean dejaBouge; //Indique si le joueur a d√©j√† commenc√© √† bouger un pion. Si oui, il ne peut pas en s√©lectionner d'autre.

    public final Color BG_COLOR = new Color(220, 205, 245);

    Partie partie;

    /**
     * Met √† jour le plateau et des salles d'attente et d'arriv√©e.
     */
    @Override
    public void updatePlateau() {

        //On supprime toutes les entit√©s du plateau qui sont sur la couche 1 = tout sauf les t√¢ches de sang
        Component[] pions = plateau.getComponentsInLayer(1);
        for (Component c : pions) {
            plateau.remove(c);
        }
        salleAttenteGreen.removeAll();
        salleAttenteRed.removeAll();

        //On affiche les jetons
        for (int i = 0; i < 4; i++) {
            Jeton jeton = this.partie.getJoueur1().getPions()[i];
            JPion jetonAffiche = pionsPurple[i];
            //On n'affiche que les pions vivants
            if (jeton.getVivant() && jeton.getEnJeu()) {//On ne met pas √† jour les pions sortis car une fois qu'ils sont d√©j√† sortis, ils peuvent pas aller ailleurs !! (cf. "Vous sortes !")
                if (jeton.getSurPlateau()) {
                    jetonAffiche.setLocation(plateau.position(jeton.getPosition()));

                    //Revoir s'il faut v√©rifier le sprite
                    plateau.add(jetonAffiche, new Integer(1));
                } else { //Le jeton est dans la r√©serve
                    salleAttenteRed.add(jetonAffiche);
                }

            }
        }

        for (int i = 0; i < 4; i++) {
            Jeton jeton = this.partie.getJoueur2().getPions()[i];
            JPion jetonAffiche = pionsGreen[i];
            //On n'affiche que les pions vivants
            if (jeton.getVivant() && jeton.getEnJeu()) {//On ne met pas √† jour les pions sortis car une fois qu'ils sont d√©j√† sortis, ils peuvent pas aller ailleurs !! (cf. "Vous sortes !")
                if (jeton.getSurPlateau()) {
                    jetonAffiche.setLocation(plateau.position(jeton.getPosition()));

                    //Revoir s'il faut v√©rifier le sprite
                    plateau.add(jetonAffiche, new Integer(1));
                } else { //Le jeton est dans la r√©serve
                    salleAttenteGreen.add(jetonAffiche);
                }

            }
        }

        //On parcourt le plateau du mod√®le
        for (Pion p : this.partie.getPlateau().getPlateau().values()) {

            //On affiche les cailloux
            if (p instanceof Caillou) {
                String[] sprite = new String[1];
                sprite[0] = "mur.png";
                JPion caillou = new JPion(sprite);//On cr√©√© un nouveau caillou
                caillou.setLocation(plateau.position(p.getPosition())); //plateau.position(Coordonnees c) est le convertisseur qui transforme les coordonn√©es en la position en pixels sur l'√©cran
                plateau.add(caillou, new Integer(1));

                //On affiche le monstre
            } else if (p instanceof Monstre) {
                Monstre m = (Monstre) p;//On est oblig√© de convertir en Monstre pour pouvoir utiliser getDirection()
                monstre.setLocation(plateau.position(p.getPosition()));
                switch (m.getDirection()) {//On attribue au monstre le sprite correspondant √† sa direction
                    case HAUT:
                        monstre.setImage(0);
                        break;
                    case DROITE:
                        monstre.setImage(1);
                        break;
                    case BAS:
                        monstre.setImage(2);
                        break;
                    case GAUCHE:
                        monstre.setImage(3);
                        break;
                }
                plateau.add(monstre, new Integer(1));

            }
        }
    }

    @Override
    public void tourJoueur(int numJoueur) {
        dejaBouge = false;
        selected.unselect();
        this.selected = null;
        boutonFinTour.setEnabled(true);

        if (numJoueur == 1) {
            this.numJoueur = 1;
        } else if (numJoueur == 2) {
            this.numJoueur = 2;
        }
    }

}
